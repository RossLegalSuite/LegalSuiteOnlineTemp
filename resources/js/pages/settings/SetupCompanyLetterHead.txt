<template>

<div class="card h-100 border-0" id="setup-company-letterhead-body">
    
    <div class="card-header">
        <div class="d-flex justify-content-between">
            <h3><i class="fa fa-file-word-o mr-2"></i>Letterhead</h3>
            <page-close-button @closeClicked="hide"/>
        </div>
    </div>

    <div class="card-body overflow-auto p-3">
        <div class="row">

            <div class="col-lg-12">


                <vue-dropzone 
                    v-show="!letterHeadPdfFile"
                    id="company-letterhead-drop-zone-component" 
                    ref="company-letterhead-drop-zone-component" 
                    :options="letterHeadDropOptions" 
                    :useCustomSlot=true 
                    @vdropzone-error="letterHeadUploadError"
                    @vdropzone-success="letterHeadUploaded"
                >
                    <div class="dropzone-custom-content cp">
                        <h1 class="text-primary" style="display:inline-block">Company Letterhead</h1>
                        <h2 style="display:inline-block">
                            <pop-over content="
                                <h4>Company Letterhead</h4>
                                <p>A letterhead can be used in documents generated by the Document Assembly process. 
                                    Instead of putting the letterhead in every document, you can design your letterhead once (in Word) and then upload it here. 
                                    You can then insert it into a Document Template using a Merge Field (company->letterhead).</p>
                                <p>If your letterhead ever changes, you can simply upload it here and the Assembled Documents will then use the new letterhead.</p>" 
                                container="#setup-company-letterhead-body"
                            />
                        </h2>

                        
                        <h3 class="text-success mt-5">Drag and drop your letterhead here</h3>
                        <div class="subtitle">...or click anywhere in this box to manually select a document</div>
                    </div>
                </vue-dropzone>


                <div v-show="letterHeadPdfFile" style="min-height:70vh">

                    <iframe class="iframe-container" id="setup-company-letterhead-pdf-iframe"></iframe>

                </div>

            </div>

        </div>

    </div>

    <div v-show="letterHeadPdfFile" class="modal-footer justify-content-between">
        <div>
            <span>
                <button class="btn btn-success form-button mr-3" @click="replaceLetterHead" type="button" title="Change the letterhead"><i class="fa fa-refresh fa-lg mr-2"></i>Replace</button>
                <button class="btn btn-primary form-button mr-3" @click="downloadLetterHead" type="button" title="Download the Word version of the letterhead"><i class="fa fa-download fa-lg mr-2"></i>Download</button>
                <button class="btn btn-danger form-button" type="button" @click="deleteLetterHead" title="Remove the letterhead"><i class="fa fa-times fa-lg mr-2"></i>Delete</button>
            </span>
        </div>
        <div></div>
    </div>


</div>

    
</template>

<script>

import vueDropzone from "vue2-dropzone";

export default {

    components: {
        vueDropzone: vueDropzone,
    },

    data() {
        return {

            letterHeadPdfFile: null,
            letterHeadPath: null,
            letterHeadFileName: null,

            letterHeadDropOptions: {
                url: "/file/selected",
                maxFilesize: 5, // 5MB
                createImageThumbnails: false,
                acceptedFiles: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
            },
        }
    },

    watch: {

        letterHeadPdfFile: function(newValue) {

            $('#setup-company-letterhead-pdf-iframe')[0].src = '';

            if ( newValue ) {
                setTimeout(() => {
                    
                    $('#setup-company-letterhead-pdf-iframe')[0].src = newValue;
                    
                });
            }
            
        }
    },


    methods: {

        async letterHeadUploaded(file) {

            this.letterHeadPdfFile = '';// Clear this in case they upload the same file name

            var formData = new FormData();

            formData.append("file", file);
            formData.append("fileName", file.name);
            formData.append("folder", 'documents');

            let response = await axios.post('/file/upload', formData, {
                headers: {
                    'Content-Type': 'multipart/form-data'
                }
            });

            if (response.data.error) {

                showError('Error uploading document',response.data.error);

            } else {

                root.company.letterHeadPath = this.letterHeadPath = response.data.path;
                root.company.letterHeadFileName = this.letterHeadFileName = file.name;

                const convertOptions = {
                    path: response.data.path,
                    fileName: file.name,
                };

                let convertResponse = await root.convertToPdf(convertOptions);

                if ( convertResponse.error ) {

                    showError('PDF Conversion Error',convertResponse.error);

                } else {

                    root.company.letterHeadPdfFile = this.letterHeadPdfFile = convertResponse.path + '/' + convertResponse.fileName;

                    this.storeLetterHead();

                }

            }

        },

        storeLetterHead() {

            axios.post('/company/storeLetterHead', {
                letterHeadPath: root.company.letterHeadPath,
                letterHeadFileName: root.company.letterHeadFileName,
                letterHeadPdfFile: root.company.letterHeadPdfFile,
            })

            .then(response => {

                if (response.data.error) {

                    showError('Error saving Company letterhead',response.data.error);

                }
            });
        },

        downloadLetterHead() {

            root.downloadObject(this.letterHeadPath + '/' + this.letterHeadFileName, this.letterHeadFileName,'application/vnd.openxmlformats-officedocument.wordprocessingml.document');

        },


        replaceLetterHead() {

            this.deleteLetterHead();

            $('#company-letterhead-drop-zone-component').click();

        },

        deleteLetterHead() {

            this.$refs['company-letterhead-drop-zone-component'].removeAllFiles();

            root.company.letterHeadPath = this.letterHeadPath = null;
            root.company.letterHeadFileName = this.letterHeadFileName = null;
            root.company.letterHeadPdfFile = this.letterHeadPdfFile = null;

            this.storeLetterHead();

        },

        letterHeadUploadError(file, message, xhr)  {

            showError('Error uploading letterhead', message);

            this.$refs['company-letterhead-drop-zone-component'].removeAllFiles();

        },

        hide() {

            this.$root.$refs['right-hand-tab-container'].$refs['right-hand-tabs'].clearPages();

        },



    },    

}
</script>