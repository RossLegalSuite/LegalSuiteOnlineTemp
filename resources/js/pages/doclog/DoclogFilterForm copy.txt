
<template>
    <div class="modal" :id="id">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content" style="border-color: indianred;">

            <div class="modal-header indianred">
                <h3 class="modal-title"><i class="fa fa-filter mr-2"></i>Filter Items</h3>
                <i title="Close this window" class="cp top-right fa fa-times-circle fa-2x text-white" data-dismiss="modal"></i>
            </div>

            <div class="modal-body p-3" style="height: 45vh; overflow-y: auto;">

                <div class="form-group row">
                    <div class="col-md-12">
                        <b-form-checkbox
                            class="mt-1 mb-1"
                            title="Display items you created"
                            v-model="myRecordsSelected"
                            value="1"
                            unchecked-value="0"
                            @change="myRecordsChanged"
                        >
                        Display My Items
                        </b-form-checkbox>

                    </div>
                </div>

                <select-date-filter
                    :id="id + '-date-filter'"
                    :ref="id + '-date-filter'"
                />

                <div class="form-group row">
                    <radio-buttons 
                        ref="type-radio-button"
                        label="Type" 
                        :record="typeRadioButtonRecord" 
                        column="value" 
                        name="typeValue" 
                        :buttons="$root.correspondenceTypesArray" 
                        @change="typeRadioButtonChanged"
                    />
                </div>

                <div class="form-group row">
                    <radio-buttons 
                        ref="parent-radio-button"
                        label="Linked To" 
                        :record="parentTypeRadioButtonRecord" 
                        column="parent" 
                        name="parent" 
                        :buttons="[{text: 'Matter', value: 'Matter'}, {text: 'Party', value: 'Party'}]" 
                        @change="parentTypeRadioButtonChanged"
                    />
                </div>

            </div>

            <div class="modal-footer justify-content-between">
                <div>
                    <button class="btn btn-primary form-button mr-2" type="button" @click="loadAdvancedFilters" title="Advanced Filtering options"><i class="fa fa-cog fa-lg mr-2"></i>Advanced</button>
                </div>
                <div>
                    <button class="btn btn-danger form-button" type="button" @click="hide" title="Close this screen"><i class="fa fa-times-circle fa-lg mr-2"></i>Close</button>
                </div>
            </div>

            </div>
        </div>
    </div>
</template>

<script>

import modalTemplate from "@components/modals/modal-template";
import filterMethods from "@components/filters/filter-methods";

export default {

    mixins: [modalTemplate, filterMethods],

    data() {
        return {
            table: null,
            myRecordsSelected: '0',
            myRecordsFilterColumnName: 'employee.name',
            dateFilterColumnName: 'doclog.date',
            typeRadioButtonRecord: { value: null},
            typeFilterColumnName: 'correspondence.type',
            parentTypeRadioButtonRecord: { parent: null},
            parentTypeFilterColumnName: 'correspondence.parentType',
        }
    },

    mounted() {
        this.$parent.filterForm = this;
    },    

    methods: {

        modalOpened() {

            this.primeCommonFilters();

            // Prime the Parent Type Radio Button 
            this.parentTypeRadioButtonComponent = this.$refs['parent-radio-button'];

            this.parentTypeFilterKey = this.getFilterName(this.parentTypeFilterColumnName);
            this.parentTypeFilter = this.getFilter(this.parentTypeFilterKey);
            this.parentTypeFilterFlag = this.parentTypeFilter ? true : false;

            this.parentTypeRadioButtonComponent.clearIcon = this.parentTypeFilterFlag;
            this.parentTypeRadioButtonComponent.clearIconCallback = 'clearParentTypeFilter';
            this.parentTypeRadioButtonRecord.parent = null; 


        },

        parentTypeRadioButtonChanged(newValue) {

            this.parentTypeRadioButtonComponent.clearIcon = true;

            this.deleteFilter(this.parentTypeFilterKey);

            this.addFilter(this.parentTypeFilterColumnName, this.parentTypeFilterKey, newValue);

            this.$parent.setUserFilters();

            this.$parent.table.ajax.reload();

        },

        clearParentTypeFilter() {

            this.parentTypeRadioButtonComponent.clearIcon = true;

            this.deleteFilter(this.parentTypeFilterKey);

            this.$parent.setUserFilters();

            this.$parent.table.ajax.reload();

            //Clear the Parent Radio Button radio buttons
            this.parentTypeRadioButtonRecord.parent = null; 


        },

    }   
}  
</script>